exports[`App matches snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="App">
    <div
        className="App-header">
        <img
            alt="logo"
            className="App-logo"
            src="logo.svg" />
        <h2>
            Welcome to Merritt
        </h2>
    </div>
    <p
        className="App-intro">
        To get started, edit 
        <code>
            src/App.js
        </code>
         and save to reload.
    </p>
    <p
        className="App-loading">
        Loading...
    </p>
</div>,
  "nodes": Array [
    <div
      className="App">
      <div
            className="App-header">
            <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg" />
            <h2>
                  Welcome to Merritt
            </h2>
      </div>
      <p
            className="App-intro">
            To get started, edit 
            <code>
                  src/App.js
            </code>
             and save to reload.
      </p>
      <p
            className="App-loading">
            Loading...
      </p>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "error": null,
          "info": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="App">
          <div
                    className="App-header">
                    <img
                              alt="logo"
                              className="App-logo"
                              src="logo.svg" />
                    <h2>
                              Welcome to Merritt
                    </h2>
          </div>
          <p
                    className="App-intro">
                    To get started, edit 
                    <code>
                              src/App.js
                    </code>
                     and save to reload.
          </p>
          <p
                    className="App-loading">
                    Loading...
          </p>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="App">
          <div
                    className="App-header">
                    <img
                              alt="logo"
                              className="App-logo"
                              src="logo.svg" />
                    <h2>
                              Welcome to Merritt
                    </h2>
          </div>
          <p
                    className="App-intro">
                    To get started, edit 
                    <code>
                              src/App.js
                    </code>
                     and save to reload.
          </p>
          <p
                    className="App-loading">
                    Loading...
          </p>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;
